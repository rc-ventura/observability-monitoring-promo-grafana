- name: Configurando a instãncia EC2 para deploy com Ansible.
  hosts: meuservidor
  remote_user: ubuntu
  become: true
  vars_files:
    - env_vars.yml

  tasks: 
    - name: Atualizando o cache
      apt:
       update_cache: yes

    - name: instalando Docker
      apt:
        name: docker.io
        state: present

    - name: Instalando o Docker Compose
      apt:
        name: docker-compose
        state: present

    - name: Criando um pasta /deploy no servidor remoto
      file: 
        path: "{{path_dir_deploy}}"
        state: directory
      
    - name: Criando um pasta /prometheus no servidor remoto
      file: 
        path: "{{path_dir_prometheus}}"
        state: directory

    - name: Criando um pasta /grafana no servidor remoto
      file: 
        path: "{{path_dir_grafana}}"
        state: directory

    - name: Transferindo o arquivo docker-compose.yml para o servidor remoto
      copy:
        src: "{{ config_file_src }}"
        dest: "{{ config_file_dest }}"
      register: config_copy


    - name: Dando permissão de execução ao docker-compose.yml
      file:
        path: "{{path_dir_compose}}"
        mode: u+x

    - name: Copiando o arquivo de configuração do Prometheus
      copy:
        src: "{{ prometheus_config_src }}"
        dest: "{{ prometheus_config_dest }}"
      register: prometheus_config_copy

    - name: Copiando as pastas para configuração do Grafana
      synchronize:
        src: "{{ grafana_config_src }}"
        dest: "{{ grafana_config_dest }}"
        mode: push

    - name: Subindo os containers com Docker Compose
      command: docker-compose up -d
      args:
        chdir: "{{ docker_compose_dir }}"

    - name: Verificando se os containers do Docker Compose foram iniciados corretamente
      shell: docker ps
      register: docker_ps
      changed_when: false

    - name: Verificar se os containers foram iniciados corretamente
      assert:
        that:
          - docker_ps.stdout_lines | length > 3
        fail_msg: "Os containers não foram iniciados corretamente."
        success_msg: "Os containers foram iniciados com sucesso."